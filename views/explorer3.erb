<script src="http://d3js.org/d3.v3.min.js"></script>

<p id='data'>
</p>
<div id='vis'>
</div>
<div id='loading_box' class='span12 well well-small' style='width:100%;height:200px;'>	
	<p>Loading data: 
		<div class="progress progress-striped active">
 			 <div id='loading_bar' class="bar" style="width: 0%;"></div>
		</div>
		<small style='color:#999;font-style:italic;'id='status'>...</small>
	</p>
</div>
<script>

	function status(msg) {
		action_time = (new Date) - status_timer
		msg = Math.round(action_time/100)/10 + "s: " + msg
		console.log(msg)	
		$("#status").prepend(msg+"<br>")
	}
	function reset_status() {
		status_timer = new Date
		$('#loading_bar').css('width', "0%")
		$("#status").text('')
		$('#loading_box').slideDown()
	}
active_data = {}
seed_parent = '0'

$.post('/query', {parent: seed_parent}, function(codes) {
				data = $.parseJSON(codes)
				$('#loading_bar').css('width', "20%")
				active_data[1] = data
				second_codes = []
				data.forEach(function(d) {
					second_codes = second_codes.concat(d.children)
				})
				second_codes.forEach(function(c) {
					$.post('/query', {code: c}, function(codes) {
						status("Loaded data for "+d.code+". ("+added_codes+"/"+total_codes+")")
						d.children = $.parseJSON(codes)
						d.children.forEach(function (c) { delete c.children })
						$('#loading_bar').css('width', Math.round(20 + ((added_codes/total_codes)*80))+"%")
						if (added_codes == total_codes)
							{	$('#loading_box').slideUp()
								cached_data[parent] = data
								if (parent == '0')
									{ plot( data) }
								else {plot(data)}
							}
					})
				})
			})
first_data = [{"all_children":788,"children":["100","200","300","400","500","600","700","900"],"code":"0","created_at":"2013-01-30T17:58:47Z","name":"ALL","type":"purpose","updated_at":"2013-01-30T20:02:57Z"}]

second_data = [{"all_children":129,"children":["250","210","230","240","220"],"code":"200","name":"ECONOMIC INFRASTRUCTURE AND SERVICES","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:54Z"},{"all_children":61,"children":["410","430","420"],"code":"400","name":"MULTISECTOR/CROSS-CUTTING","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:56Z"},{"all_children":21,"children":["910","920","930","998"],"code":"900","created_at":"2013-01-30T15:04:08Z","name":"OTHER","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:57Z"},{"all_children":294,"children":["140","160","111","152","112","113","114","120","121","122","130","150","151","110"],"code":"100","name":"SOCIAL INFRASTRUCTURE AND SERVICES","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:52Z"},{"all_children":206,"children":["320","310","311","312","313","321","322","323","331","332","330"],"code":"300","name":"PRODUCTION SECTORS","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:56Z"},{"all_children":24,"children":["510","530","520"],"code":"500","name":"COMMODITY AID AND GENERAL PROGRAMME ASSISTANCE","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:56Z"},{"all_children":12,"children":["60030","60040","60010","60020"],"code":"600","name":"ACTION RELATING TO DEBT","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:57Z"},{"all_children":31,"children":["740","70000","720","730"],"code":"700","name":"HUMANITARIAN AID","parent":"0","type":"purpose","updated_at":"2013-01-30T20:02:57Z"}]


var path,
	width = 960,
    height = 700,
    r = Math.min(width, height) / 2,
    color = d3.scale.category20c(),
    x = d3.scale.linear().range([0, width]),
    y = d3.scale.linear().range([0, height])

	var vis = d3.select("#vis").append("svg")
	    .attr("width", width)
	    .attr("height", height)
	    .append('g')
	    	.attr("transform", "translate(" + (r) + "," + (r ) + ")"); 

function arc(level)  {
	arc_func = d3.svg.arc()
		.innerRadius(((level-1)*r)/3)             
        .outerRadius((level*r/3));
    return arc_func
   	}

	var pie = d3.layout.pie()
		.value(function(d) {return d.all_children})


function plot_arcs(level, data) {
	var arcs = vis
		.selectAll('.arc-'+level)
		.data(pie(data))
		.enter().append('svg:path')
			.attr('class', 'arc-'+level)
			.attr('d', arc(level))
			.attr('fill', function(d, i) {return color(i)})
			.append("title")
				.text(function(d) { return d.data.code } )
}

plot_arcs(1, first_data)
plot_arcs(2, second_data)

</script>